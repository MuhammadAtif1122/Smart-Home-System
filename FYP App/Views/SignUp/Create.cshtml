@model FYP_App.Models.Sign_Up

<title>
    Smart Establishment
</title>
<link href="~/Content/SignUp.css" rel="stylesheet" />
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false); function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- Custom Theme files -->
<link href="css/style.css" rel="stylesheet" type="text/css" media="all" />
<!-- //Custom Theme files -->
<!-- web font -->
<link href="//fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,700,700i" rel="stylesheet">
<body>
<!-- //web font -->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <!-- main -->
    <div class="main-w3layouts wrapper">
        <h1>Create Your Account</h1>
        <div class="main-agileinfo">
            <div class="agileits-top">
                <form class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Your Name *", required = "required", type = "text" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    <br />
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Your Email *", required = "required", type = "Email" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    <br />

                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Your Phone Number *", required = "required", type = "text" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    <br />

                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Your Password *", required = "required", type = "text" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                  

                    <br />

                    <div class="wthree-text">
                        <label class="anim">
                            <input type="checkbox" class="checkbox" required="">
                            <span>Create My Account</span>
                        </label>

                    </div>

                    <input type="submit" value="SIGNUP">
                    <div class="colorlibcopy-agile">
                        
                    <label><b>@ViewBag.SuccessMessage</b> </label>
                    <label><b>@ViewBag.ErrorMessage </b> </label>
                    <label><b>@ViewBag.alreadyregistermail </b> </label>
                    </div>
                    <p>Have an Account? <a href="@Url.Action("login", "Login")"> Login Now!</a></p>
                </form>
            </div>
        </div>
  
        <!-- copyright -->
        <div class="colorlibcopy-agile">
            <p>© 2021 Smart Establishment. All rights reserved </p>
        </div>
        <!-- //copyright -->
        <ul class="colorlib-bubbles">
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
        </ul>
    </div>
}
    </body>

        <script>
            function showpopup() {
                //  if (model.Phone!="")
                swal.fire("this is me");
            }
            function myFunction() {
                var x = document.getElementById("myInput");
                if (x.type === "password") {
                    x.type = "text";
                } else {
                    x.type = "password";
                }
            }
                window.addEventListener("load", function () {
            const loader = document.querySelector(".loader");
            loader.className += " hidden"; // class "loader hidden"
    });
        </script>


    

